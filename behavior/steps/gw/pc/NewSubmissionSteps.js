const { When, Then } = require('@cucumber/cucumber')
import { NewSubmissionScenario } from '../../../../ui/actions/gw/pc/NewSubmissionScenario'
import { NavigationScenario } from '../../../../ui/actions/gw/pc/NavigationScenario'
import { CommercialPropertyCoverage } from '../../../../ui/actions/gw/pc/CoverageScenario/CommercialPropertyCoverage'
import { HomeownersProduct} from '../../../../ui/actions/gw/pc/CoverageScenario/HomeownersProduct'
import { CommercialUmbrellaAccessliability } from '../../../../ui/actions/gw/pc/CoverageScenario/CommercialUmbrellaandExcessLiability'
import { SmallBusiness } from '../../../../ui/actions/gw/pc/CoverageScenario/SmallBusiness'
import { t } from 'testcafe'
import { USAPersonalAuto } from '../../../../ui/actions/gw/pc/CoverageScenario/USAPersonalAuto'

const newSubmissionScenario = new NewSubmissionScenario()
const navigationScenario = new NavigationScenario()
const commercialPropertyCoverage = new CommercialPropertyCoverage()
const homeownersProduct = new HomeownersProduct()
const commercialUmbrellaAccessliability = new CommercialUmbrellaAccessliability()
const usaPersonalAuto = new USAPersonalAuto()
const smallBusiness = new SmallBusiness()

When(/^the user bind the new submission/, async function () {
    await newSubmissionScenario.bindPolicy()
}) 

Then(/^the policy is bound successfully/, async function () {
    await newSubmissionScenario.verifyIssue()
    await newSubmissionScenario.viewSubmission()
})

When(/^the user quote the new submission for personal auto/, async function () {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy()
    await newSubmissionScenario.selectProduct()    
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.usaPersonalAutoStandardCoverages()
    await usaPersonalAuto.coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.personalVehicle()
    await newSubmissionScenario.vehicleDriver()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
}) 

When(/^the user quote the new submission for homeowners/, async function () {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy()
    await newSubmissionScenario.selectProduct()    
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.gWHomeownersLineScreen()
    await newSubmissionScenario.gWHomeownersLine('AdditionalCoverges')
    await homeownersProduct.coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
})

When(/^the user quote the new submission for small business/, async function (t) {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy()
    await newSubmissionScenario.selectProduct()    
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.smallBusinessBusinessType()
    await newSubmissionScenario.smallBusinessTabSelection('SmallBusinessLineCoverages')
    await smallBusiness.coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
})

When(/^the user issue the new submission for small business/, async function (t) {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy()
    await newSubmissionScenario.selectProduct()    
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.smallBusinessBusinessType()
    await newSubmissionScenario.smallBusinessTabSelection('SmallBusinessLineCoverages')
    await smallBusiness.coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
    await newSubmissionScenario.issuePolicy()
})

When(/^the user quote the new submission for umbrella liability/, async function () {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy()
    await newSubmissionScenario.selectProduct()    
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.commercialUmbrellaAccessliability()
    await commercialUmbrellaAccessliability.coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
})

When(/^the user issue the new submission for umbrella liability/, async function () {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy()
    await newSubmissionScenario.selectProduct()    
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.commercialUmbrellaAccessliability()
    await commercialUmbrellaAccessliability.coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
    await newSubmissionScenario.issuePolicy()
})

Then(/^the quote is saved successfully/, async function () {
    await newSubmissionScenario.saveQuote()
}) 

When(/^the user creates commercial policy/, async function () {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy()
    await newSubmissionScenario.selectProduct()   
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()   
    await commercialPropertyCoverage.coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.addCpBlanket()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
    await newSubmissionScenario.issuePolicy()
})

When(/^the user issue the new submission for personal auto/, async function () {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy()
    await newSubmissionScenario.selectProduct()    
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.usaPersonalAutoStandardCoverages()
    await usaPersonalAuto.coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.personalVehicle()
    await newSubmissionScenario.vehicleDriver()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
    await newSubmissionScenario.issuePolicy()
})

When(/^the user issue the new homeowner policy/, async function () {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy()
    await newSubmissionScenario.selectProduct()    
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.gWHomeownersLineScreen()
    await newSubmissionScenario.gWHomeownersLine('AdditionalCoverges')
    await homeownersProduct.coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
    await newSubmissionScenario.issuePolicy()
})

When(/^the user quote the new submission for commercial property/, async function (t) {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy()
    await newSubmissionScenario.selectProduct()   
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await commercialPropertyCoverage.coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.addCpBlanket()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
})

Then(/^the policy is issued/, async function () {
    await newSubmissionScenario.verifyIssue()
    await newSubmissionScenario.viewSubmission()
})